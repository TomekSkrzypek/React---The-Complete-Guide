{"ast":null,"code":"var _jsxFileName = \"/home/aneta/Desktop/React - The Complete Guide Tomek/react-complete-guide-tomek/01-starting-setup/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2000\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(\"Expenses->filterChangeHandler->selectedYear:\" + selectedYear);\n  };\n  console.log(\"exactExpense.date.year\");\n  console.log(props.expensy.date.year);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), props.expensy.filter(exactExpense => exactExpense.date.year === filteredYear).map(filteredExpense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: filteredExpense.title,\n        amount: filteredExpense.amount,\n        date: filteredExpense.date\n      }, filteredExpense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)), props.expensy.map(objectMy => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: objectMy.title,\n        amount: objectMy.amount,\n        date: objectMy.date\n      }, objectMy.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"TNP8YpfS5SiipONgTGt89ezqANc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","console","log","expensy","date","year","filter","exactExpense","map","filteredExpense","title","amount","id","objectMy"],"sources":["/home/aneta/Desktop/React - The Complete Guide Tomek/react-complete-guide-tomek/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2000\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(\"Expenses->filterChangeHandler->selectedYear:\" + selectedYear);\n  };\n\nconsole.log(\"exactExpense.date.year\");\nconsole.log(props.expensy.date.year)\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {/* {filteredYear==='all' \n        ? {props.expensy.map((objectMy) => (\n          <ExpenseItem\n            key={objectMy.id}\n            title={objectMy.title}\n            amount={objectMy.amount}\n            date={objectMy.date}\n          />\n        ))}\n        : {props.expensy.filter(objectMy => objectMy.date.getFullYear===filteredYear).map((objectMyFiltered) => (\n          <ExpenseItem\n            key={objectMyFiltered.id}\n            title={objectMyFiltered.title}\n            amount={objectMyFiltered.amount}\n            date={objectMyFiltered.date}\n          />\n        ))}} */}\n\n        {/* {filteredYear===\"2000\" ? console.log(\"allllll\") : console(\"different\")} */}\n\n        {props.expensy\n          .filter((exactExpense) => exactExpense.date.year === filteredYear)\n          .map((filteredExpense) => (\n            <ExpenseItem\n              key={filteredExpense.id}\n              title={filteredExpense.title}\n              amount={filteredExpense.amount}\n              date={filteredExpense.date}\n            />\n          ))}\n\n        {props.expensy.map((objectMy) => (\n          <ExpenseItem\n            key={objectMy.id}\n            title={objectMy.title}\n            amount={objectMy.amount}\n            date={objectMy.date}\n          />\n        ))}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMQ,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;IAC7BC,OAAO,CAACC,GAAG,CAAC,8CAA8C,GAAGF,YAAY,CAAC;EAC5E,CAAC;EAEHC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrCD,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,OAAO,CAACC,IAAI,CAACC,IAAI,CAAC;EAElC,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACxB,QAAC,aAAa;QACZ,QAAQ,EAAER,YAAa;QACvB,cAAc,EAAEE;MAAoB;QAAA;QAAA;QAAA;MAAA,QACpC,EAqBDH,KAAK,CAACO,OAAO,CACXG,MAAM,CAAEC,YAAY,IAAKA,YAAY,CAACH,IAAI,CAACC,IAAI,KAAKR,YAAY,CAAC,CACjEW,GAAG,CAAEC,eAAe,iBACnB,QAAC,WAAW;QAEV,KAAK,EAAEA,eAAe,CAACC,KAAM;QAC7B,MAAM,EAAED,eAAe,CAACE,MAAO;QAC/B,IAAI,EAAEF,eAAe,CAACL;MAAK,GAHtBK,eAAe,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAK1B,CAAC,EAEHhB,KAAK,CAACO,OAAO,CAACK,GAAG,CAAEK,QAAQ,iBAC1B,QAAC,WAAW;QAEV,KAAK,EAAEA,QAAQ,CAACH,KAAM;QACtB,MAAM,EAAEG,QAAQ,CAACF,MAAO;QACxB,IAAI,EAAEE,QAAQ,CAACT;MAAK,GAHfS,QAAQ,CAACD,EAAE;QAAA;QAAA;QAAA;MAAA,QAKnB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA5DIjB,QAAQ;AAAA,KAARA,QAAQ;AA8Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}