{"ast":null,"code":"var _jsxFileName = \"/home/aneta/Desktop/React - The Complete Guide Tomek/react-complete-guide-tomek/01-starting-setup/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"all\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log(\"Expenses->filterChangeHandler->selectedYear:\" + selectedYear);\n  };\n  console.log(\"props.expensy.date.year\");\n  console.log(props.expensy[0].date.getFullYear().toString());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), filteredYear === \"all\" ? props.expensy.map(objectMy => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: objectMy.title,\n        amount: objectMy.amount,\n        date: objectMy.date\n      }, objectMy.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)) : props.expensy.filter(exactExpense => exactExpense.date.getFullYear().toString() === filteredYear).map(filteredExpense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: filteredExpense.title,\n        amount: filteredExpense.amount,\n        date: filteredExpense.date\n      }, filteredExpense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"-----\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"+4lVDRlCzJNt2X96pR9lNpSU+tw=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","console","log","expensy","date","getFullYear","toString","map","objectMy","title","amount","id","filter","exactExpense","filteredExpense"],"sources":["/home/aneta/Desktop/React - The Complete Guide Tomek/react-complete-guide-tomek/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"all\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(\"Expenses->filterChangeHandler->selectedYear:\" + selectedYear);\n  };\n\n  console.log(\"props.expensy.date.year\");\n  console.log(props.expensy[0].date.getFullYear().toString());\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n     \n\n        \n\n     \n\n        {filteredYear === \"all\"\n          ? props.expensy.map((objectMy) => (\n              <ExpenseItem\n                key={objectMy.id}\n                title={objectMy.title}\n                amount={objectMy.amount}\n                date={objectMy.date}\n              />\n            ))\n          : props.expensy\n              .filter(\n                (exactExpense) =>\n                  exactExpense.date.getFullYear().toString() === filteredYear\n              )\n              .map((filteredExpense) => (\n                <ExpenseItem\n                  key={filteredExpense.id}\n                  title={filteredExpense.title}\n                  amount={filteredExpense.amount}\n                  date={filteredExpense.date}\n                />\n              ))}  \n              \n               <h1>-----</h1>\n\n\n\n\n        {/* {props.expensy.map((objectMy) => (\n          <ExpenseItem\n            key={objectMy.id}\n            title={objectMy.title}\n            amount={objectMy.amount}\n            date={objectMy.date}\n          />\n        ))} */}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,gBAAgB;AACvB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMQ,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;IAC7BC,OAAO,CAACC,GAAG,CAAC,8CAA8C,GAAGF,YAAY,CAAC;EAC5E,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtCD,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,CAAC;EAE3D,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACxB,QAAC,aAAa;QACZ,QAAQ,EAAET,YAAa;QACvB,cAAc,EAAEE;MAAoB;QAAA;QAAA;QAAA;MAAA,QACpC,EAODF,YAAY,KAAK,KAAK,GACnBD,KAAK,CAACO,OAAO,CAACI,GAAG,CAAEC,QAAQ,iBACzB,QAAC,WAAW;QAEV,KAAK,EAAEA,QAAQ,CAACC,KAAM;QACtB,MAAM,EAAED,QAAQ,CAACE,MAAO;QACxB,IAAI,EAAEF,QAAQ,CAACJ;MAAK,GAHfI,QAAQ,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAKnB,CAAC,GACFf,KAAK,CAACO,OAAO,CACVS,MAAM,CACJC,YAAY,IACXA,YAAY,CAACT,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKT,YAAY,CAC9D,CACAU,GAAG,CAAEO,eAAe,iBACnB,QAAC,WAAW;QAEV,KAAK,EAAEA,eAAe,CAACL,KAAM;QAC7B,MAAM,EAAEK,eAAe,CAACJ,MAAO;QAC/B,IAAI,EAAEI,eAAe,CAACV;MAAK,GAHtBU,eAAe,CAACH,EAAE;QAAA;QAAA;QAAA;MAAA,QAK1B,CAAC,eAED;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA;EAahB;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA/DIhB,QAAQ;AAAA,KAARA,QAAQ;AAiEd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}